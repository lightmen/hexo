{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/jacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by.svg","path":"img/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/jacman.jpg","path":"img/jacman.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/scrollup.png","path":"img/scrollup.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/banner.jpg","path":"img/banner.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"3f10144cff65c71704784b722223681861bb4e30","modified":1490022359000},{"_id":"source/_posts/.DS_Store","hash":"4589d6c761ff925d1519d3882051be0966d2b72a","modified":1490026898000},{"_id":"source/_posts/Hexo + Github Pages搭建个人博客.md","hash":"f9200512e1fc17a96dd8e89d9ecdd1434c1972b8","modified":1489927053000},{"_id":"source/_posts/Hexo主题添加评论模块.md","hash":"71f8c9757ec4ff1e6aca7904237409f6695f663e","modified":1489929036000},{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1489903812000},{"_id":"themes/jacman/README.md","hash":"75a5c9fbd7c9cec4d2f277042d2fee550e4936be","modified":1489903812000},{"_id":"themes/jacman/README_zh.md","hash":"d6014b16eaccc97dc54a7779c9e36003752410e1","modified":1489903812000},{"_id":"themes/jacman/_config.yml","hash":"f3f0aa6dc3db9f8cf7731fe37a9e0b1e10447326","modified":1489929900000},{"_id":"themes/jacman/.DS_Store","hash":"9e717481ae480a27ba5028d280381d2226d4a7c0","modified":1489912311000},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1489903812000},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1489903812000},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1489903812000},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1489903812000},{"_id":"source/about/index.md","hash":"1866cae7eede5b8c1e5ea408035d615f6b37dd29","modified":1489918395000},{"_id":"source/_posts/leetcode/.DS_Store","hash":"f3587a073b8d1f395cfb01947c7c810f41d23c43","modified":1490021320000},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1489903812000},{"_id":"source/_posts/leetcode/add-binary.md","hash":"2c523956ac722cb6a61817ef9abd7118b4641778","modified":1490026965000},{"_id":"themes/jacman/source/.DS_Store","hash":"a2012e88a0de4e248a7ef67208cf60366a5e18c8","modified":1489903812000},{"_id":"themes/jacman/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1489903812000},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1489903812000},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1489903812000},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1489903812000},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1489903812000},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1489903812000},{"_id":"themes/jacman/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1489903812000},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1489903812000},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"c703b0c25139b8a5f8f9d24a334a07905e2b7987","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1489903812000},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1489903812000},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"5f80bf6c6ddcf8c28c4599cd1540b14b25d54f18","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"761941be4922cd3c177c8130296b909bf7db5c09","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"18515612344ff048b9372b91b7eef6f3b143801f","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"5c759b6ea214bac56a393247de27e67ce73fb33f","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1489903812000},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"a31c2b223d0feb2a227e203cac9e5d13b7d328a8","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"1083824a6c6c3df02767f2f3b727aee78ebb76ec","modified":1489903812000},{"_id":"themes/jacman/source/img/.DS_Store","hash":"1847da6de13d1a693e9e880a104db3047ec3df32","modified":1489903812000},{"_id":"themes/jacman/source/img/author.jpg","hash":"53764035a546d8b305175ca960f4e9106bd1cecb","modified":1489903812000},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1489903812000},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1489903812000},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1489903812000},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1489903812000},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1489903812000},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1489903812000},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1489903812000},{"_id":"themes/jacman/source/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1489903812000},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1489903812000},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1489903812000},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1489903812000},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1489903812000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1489903812000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1489903812000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1489903812000},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1489903812000},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1489903812000},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1489903812000},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1489903812000},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1489903812000},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1489903812000},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1489903812000},{"_id":"themes/jacman/source/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"1911613a19b605a58f801c21b03b5d4c83b90f9c","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1489903812000},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"5121ceb712be3f2dde98b8b6e589b546e19eab8f","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1489903812000},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1489903812000},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1489903812000},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1489903812000},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"f016180726019927b9a835ed01e04d153f27a149","modified":1489903812000},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1489903812000},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"c88bc8f5805173920a5fdd7e9234a850e3d8e151","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"36a705942b691abe0d643ea8afa339981b32f6f2","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1489903812000},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1489903812000},{"_id":"themes/jacman/source/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1489903812000},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1489903812000},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1489903812000},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1489903812000},{"_id":"public/about/index.html","hash":"5ff8cbee3c0187ff37129078d5a4e38fdda2a3cd","modified":1490023161217},{"_id":"public/categories/Hexo/index.html","hash":"3588df9ddd5ce27709f66b1c70e5505fc189ac65","modified":1490023161217},{"_id":"public/categories/Leetcode/index.html","hash":"54e0451df087ab0ca23631adde58b5a95d463038","modified":1490027540503},{"_id":"public/archives/index.html","hash":"8c990bc4cc3c3a893522bf0922cc9af09bf55de7","modified":1490027540511},{"_id":"public/archives/2017/index.html","hash":"db10085ca7394e719c13b894fd42b6ae2a1ed3fc","modified":1490027540512},{"_id":"public/archives/2017/03/index.html","hash":"5471c5bd92fc1b21866bc1cbbbebd53621af312b","modified":1490027540512},{"_id":"public/index.html","hash":"9d483d8c88762fe9b569e85155b4bc2caf2f64d9","modified":1490027540512},{"_id":"public/tags/Hexo/index.html","hash":"2c7f4689cba4db044cc70c4c389111220d9fb41b","modified":1490023161220},{"_id":"public/tags/Leetcode/index.html","hash":"c9790df9590a5261e4156a4b6af562961d6edaca","modified":1490027540513},{"_id":"public/tags/C-C/index.html","hash":"936cda05770dbb6ff2bdad6d497804a8fbe6ee01","modified":1490027540513},{"_id":"public/tags/Python/index.html","hash":"0f381f5767a49e395f2ebfa696d37fd7ea18a2c4","modified":1490027540532},{"_id":"public/tags/算法/index.html","hash":"7ee648b005f3f7e3ff83eeba6346a8f15d930366","modified":1490023161220},{"_id":"public/2017/03/20/leetcode/add-binary/index.html","hash":"80f39f306cd9cb72f61cc24370b51362b3ffd139","modified":1490027540513},{"_id":"public/2017/03/19/Hexo主题添加评论模块/index.html","hash":"2c6667ec6803d32c22224448a47e09ee40851fe3","modified":1490027540513},{"_id":"public/2017/03/19/Hexo + Github Pages搭建个人博客/index.html","hash":"0431b6bcb43b36912cff4a642d058a8816dc58e5","modified":1490027540513},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1490023161242},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1490023161242},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1490023161242},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1490023161243},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1490023161243},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1490023161244},{"_id":"public/img/author.jpg","hash":"53764035a546d8b305175ca960f4e9106bd1cecb","modified":1490023161244},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1490023161245},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1490023161245},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1490023161245},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1490023161245},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1490023161245},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1490023161245},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1490023161247},{"_id":"public/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1490023161247},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1490023161247},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1490023161247},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1490023161247},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1490023161247},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1490023161247},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1490023161248},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1490023161248},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1490023161248},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1490023161248},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1490023161248},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1490023161248},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1490023161248},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1490023161248},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1490023162760},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1490023162760},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1490023162762},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1490023162765},{"_id":"public/css/style.css","hash":"1737965b2ad2e4999c93bfa7657bdfc9990675f3","modified":1490023162765},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1490023162765},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1490023162765},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1490023162765},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1490023162765},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1490023162765},{"_id":"public/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1490023162766},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1490023162766},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1490023162777},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1490023162777},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1490023162777},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1490023162777},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1490023162778},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1490023162778},{"_id":"public/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1490023162780},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1490023162780},{"_id":"source/_posts/leetcode/assign-cookies.md","hash":"938285c555bdd640daba8368ff2d58bfecf96cbb","modified":1490028454000},{"_id":"public/tags/Algorithm/index.html","hash":"d34440b04f222ccd3757b7d91a21af7c94f6c704","modified":1490027540568},{"_id":"public/tags/贪心算法/index.html","hash":"78dc44c8882cfe7d05ec6a30331fe7d01d73030c","modified":1490027540569},{"_id":"public/2017/03/21/leetcode/assign-cookies/index.html","hash":"4d6e6f5addc1906ce84d29673818394c7d7ebab8","modified":1490028469545}],"Category":[{"name":"Hexo","_id":"cj0i9bg2d0002s0rr549so8uh"},{"name":"Leetcode","_id":"cj0i9bg5u000cs0rry3usu0wh"}],"Data":[],"Page":[{"title":"关于我","date":"2017-03-19T07:38:00.000Z","_content":"\nauthor: lightmen\n\ngithub: [https://github.com/lightmen](https://github.com/lightmen)\n\nemail: zero_he@foxmail.com\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2017-03-19 15:38:00\n---\n\nauthor: lightmen\n\ngithub: [https://github.com/lightmen](https://github.com/lightmen)\n\nemail: zero_he@foxmail.com\n\n","updated":"2017-03-19T10:13:15.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj0i9bg5p000as0rrm515x9xw","content":"<p>author: lightmen</p>\n<p>github: <a href=\"https://github.com/lightmen\" target=\"_blank\" rel=\"external\">https://github.com/lightmen</a></p>\n<p>email: zero_he@foxmail.com</p>\n","excerpt":"","more":"<p>author: lightmen</p>\n<p>github: <a href=\"https://github.com/lightmen\">https://github.com/lightmen</a></p>\n<p>email: zero_he@foxmail.com</p>\n"}],"Post":[{"title":"Hexo + Github Pages搭建个人博客","toc":true,"_content":"\n# 关于Hexo与Github Pages\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n而Github Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服 务，站点可以被免费托管在 Github 上，你可以选择使用 Github Pages 默 认提供的域名 github.io或者自定义域名来发布站点。\n\n利用Github Pages和Hexo，我们可以搭建自己的博客网站，可以参考示例: [lightmen.github.io](https://lightmen.github.io/)。接下来我将分步骤介绍如何用GitHub Pages和Hexo搭建个人网站。\n\n# 安装Hexo\n安装Hexo很简单，但是在安装前，必须确保你的电脑中已安装下列两个应用程序:\n\n- [Node.js](https://nodejs.org/en/)\n- [Git](https://git-scm.com/)\n\n(备注：在终端中输入 npm 命令可以验证电脑中是否安装了Node.js，输入git命令可以验证是否安装了Git，如果没有安装相应的程序，属于npm或者git命令，终端会提示找不到该命令)。\n\n如果您的电脑中已经安装了上述两个程序，那么恭喜你！接下来你只需要在终端中输入如下命令就可以完成 Hexo 的安装：\n ``` bash\n $ npm install -g hexo-cli\n ```\n\n Hexo安装完成后，接下来在指定文件夹中新建需要的文件，我们可以假设有个hexo目录，然后在该目录里面创建一个blog文件：\n ``` bash\n $ cd hexo\n $ mkdir blog\n $ hexo init blog\n $ cd blog\n $ npm install\n ```\n\n 新建完成后，在blog目录下面会生成如下文件：\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n这些文件的具体释义，参考 hexo.io官网中[配置](https://hexo.io/zh-cn/docs/configuration.html)一节, 这里不做过多解释。\n\n继续操作，在终端中输入如下命令：\n``` bash\n$ hexo g\n$ hexo s\n```\n\n提示: \"Hexo is running at http://localhost:4000/. \"  在浏览器中打开http://localhost:4000/, 你将会看到:\n![landscape](http://note.youdao.com/yws/api/personal/file/WEB109a2e85adcbf21b729cc70c8df2ef85?method=download&shareKey=e3cf0fdd4ce77bfbc0dcf0b559f3a529)\n\n至此，Hexo的本地配置基本完成。\n\n# 配置Github Pages\n\n配置Github Pages，首先你得有个github账号，如果没有，请进入 [GitHub网站](https://github.com/)注册，登陆进去。\n\n登陆网站后，在网站右上角的\"+\"图标那里，点击 \"[New repository](https://github.com/new)\", 创建一个仓库。仓库名必须为你的用户名＋ github.io，比如我的github用户名为：lightmen， 那么我创建的仓库名就必须为：lightmen.github.io。 创建好后，可以试着在浏览器里面输入 https://yourname.github.io/, 确认是否可以正常访问(当然，刚刚创建的仓库，里面什么内容都没有，浏览器会显示空白)。\n\n另外，如果你是第一次使用github，你必须在本地配置好你的git环境，确保你可以往github上面的仓库传文件。这里，不做过多介绍，网上一堆可参考的教程。\n\n# 部署到Github Pages\n\n这一节的内容可以参考Hexo官方文档中[部署部分](https://hexo.io/zh-cn/docs/deployment.html)，我这里分三个步骤讲解。\n\n1. 运行如下命令，安装[hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n``` bash\n$ npm install hexo-deployer-git --save\n```\n2. 然后打开Hexo主文件夹(备注：hexo init命令设置的那个文件夹）中的_config.yml, 设置其中的deploy参数，以我的为例，设置的内容如下：\n```\ndeploy:\n  type: git\n  repo: https://github.com/lightmen/lightmen.github.io.git\n  branch: master\n```\n\n3. 然后在当前目录下，打开终端，输入下面命令，将网站部署到服务器上：\n``` bash\n$ hexo d\n```\n随后，按照提示输入github的账号和密码，上传文件。网站部署到服务区后，就可以通过 https://yourname.github.io/ 来访问自己刚刚上传的网站。\n\n# 添加新文章\n\n在网站中添加文章，通过运行以下命令创建POST：\n``` bash\n$ hexo n “your post name”\n$ hexo g\n$ hexo s\n```\n然后可以在浏览器查看修改的内容。\n\n打开Hexo主文件夹下的source 目录，所有的文章都会以md形式保存在_post文件夹中，只要在 _post文件夹中新建md类型的文档，就能在执行hexo g的时候被渲染。 新建的文章头需要添加一些yml信息，如下所示：\n```\ntitle: hello-world   //在此处添加你的标题。\ndate: 2017-03-18 22:15:29   //在此处输入你编辑这篇文章的时间。\ncategories: Exercise   //在此处输入这篇文章的分类。\ntoc: true  //在此处设定是否开启目录，需要主题支持。\n```\n\n# 进阶\n如果成功完成了上述的全部步骤，恭喜你，你已经搭建了一个最为简单且基础的博客。但是这个博客还非常简单， 没有个人的定制，操作也比较复杂。我们还可以进行一些设置主题、更换域名等操作，调整自己的博客，这部分内容待续。\n\n参考文档：\n\n- [使用Hexo搭建个人博客](http://www.jianshu.com/p/f4dce0e76886)\n\n- [史上最详细的Hexo博客搭建图文教程](https://xuanwo.org/2015/03/26/hexo-intor/)\n\n- [手把手教你使用Hexo + Github Pages搭建个人独立博客](https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/)\n\n- [Hexo使用指南](http://www.jianshu.com/p/84a8384be1ae)\n\n\n","source":"_posts/Hexo + Github Pages搭建个人博客.md","raw":"---\ntitle: Hexo + Github Pages搭建个人博客\ncategories: Hexo\ntags:\n- Hexo\ntoc: true\n---\n\n# 关于Hexo与Github Pages\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n而Github Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服 务，站点可以被免费托管在 Github 上，你可以选择使用 Github Pages 默 认提供的域名 github.io或者自定义域名来发布站点。\n\n利用Github Pages和Hexo，我们可以搭建自己的博客网站，可以参考示例: [lightmen.github.io](https://lightmen.github.io/)。接下来我将分步骤介绍如何用GitHub Pages和Hexo搭建个人网站。\n\n# 安装Hexo\n安装Hexo很简单，但是在安装前，必须确保你的电脑中已安装下列两个应用程序:\n\n- [Node.js](https://nodejs.org/en/)\n- [Git](https://git-scm.com/)\n\n(备注：在终端中输入 npm 命令可以验证电脑中是否安装了Node.js，输入git命令可以验证是否安装了Git，如果没有安装相应的程序，属于npm或者git命令，终端会提示找不到该命令)。\n\n如果您的电脑中已经安装了上述两个程序，那么恭喜你！接下来你只需要在终端中输入如下命令就可以完成 Hexo 的安装：\n ``` bash\n $ npm install -g hexo-cli\n ```\n\n Hexo安装完成后，接下来在指定文件夹中新建需要的文件，我们可以假设有个hexo目录，然后在该目录里面创建一个blog文件：\n ``` bash\n $ cd hexo\n $ mkdir blog\n $ hexo init blog\n $ cd blog\n $ npm install\n ```\n\n 新建完成后，在blog目录下面会生成如下文件：\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n这些文件的具体释义，参考 hexo.io官网中[配置](https://hexo.io/zh-cn/docs/configuration.html)一节, 这里不做过多解释。\n\n继续操作，在终端中输入如下命令：\n``` bash\n$ hexo g\n$ hexo s\n```\n\n提示: \"Hexo is running at http://localhost:4000/. \"  在浏览器中打开http://localhost:4000/, 你将会看到:\n![landscape](http://note.youdao.com/yws/api/personal/file/WEB109a2e85adcbf21b729cc70c8df2ef85?method=download&shareKey=e3cf0fdd4ce77bfbc0dcf0b559f3a529)\n\n至此，Hexo的本地配置基本完成。\n\n# 配置Github Pages\n\n配置Github Pages，首先你得有个github账号，如果没有，请进入 [GitHub网站](https://github.com/)注册，登陆进去。\n\n登陆网站后，在网站右上角的\"+\"图标那里，点击 \"[New repository](https://github.com/new)\", 创建一个仓库。仓库名必须为你的用户名＋ github.io，比如我的github用户名为：lightmen， 那么我创建的仓库名就必须为：lightmen.github.io。 创建好后，可以试着在浏览器里面输入 https://yourname.github.io/, 确认是否可以正常访问(当然，刚刚创建的仓库，里面什么内容都没有，浏览器会显示空白)。\n\n另外，如果你是第一次使用github，你必须在本地配置好你的git环境，确保你可以往github上面的仓库传文件。这里，不做过多介绍，网上一堆可参考的教程。\n\n# 部署到Github Pages\n\n这一节的内容可以参考Hexo官方文档中[部署部分](https://hexo.io/zh-cn/docs/deployment.html)，我这里分三个步骤讲解。\n\n1. 运行如下命令，安装[hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n``` bash\n$ npm install hexo-deployer-git --save\n```\n2. 然后打开Hexo主文件夹(备注：hexo init命令设置的那个文件夹）中的_config.yml, 设置其中的deploy参数，以我的为例，设置的内容如下：\n```\ndeploy:\n  type: git\n  repo: https://github.com/lightmen/lightmen.github.io.git\n  branch: master\n```\n\n3. 然后在当前目录下，打开终端，输入下面命令，将网站部署到服务器上：\n``` bash\n$ hexo d\n```\n随后，按照提示输入github的账号和密码，上传文件。网站部署到服务区后，就可以通过 https://yourname.github.io/ 来访问自己刚刚上传的网站。\n\n# 添加新文章\n\n在网站中添加文章，通过运行以下命令创建POST：\n``` bash\n$ hexo n “your post name”\n$ hexo g\n$ hexo s\n```\n然后可以在浏览器查看修改的内容。\n\n打开Hexo主文件夹下的source 目录，所有的文章都会以md形式保存在_post文件夹中，只要在 _post文件夹中新建md类型的文档，就能在执行hexo g的时候被渲染。 新建的文章头需要添加一些yml信息，如下所示：\n```\ntitle: hello-world   //在此处添加你的标题。\ndate: 2017-03-18 22:15:29   //在此处输入你编辑这篇文章的时间。\ncategories: Exercise   //在此处输入这篇文章的分类。\ntoc: true  //在此处设定是否开启目录，需要主题支持。\n```\n\n# 进阶\n如果成功完成了上述的全部步骤，恭喜你，你已经搭建了一个最为简单且基础的博客。但是这个博客还非常简单， 没有个人的定制，操作也比较复杂。我们还可以进行一些设置主题、更换域名等操作，调整自己的博客，这部分内容待续。\n\n参考文档：\n\n- [使用Hexo搭建个人博客](http://www.jianshu.com/p/f4dce0e76886)\n\n- [史上最详细的Hexo博客搭建图文教程](https://xuanwo.org/2015/03/26/hexo-intor/)\n\n- [手把手教你使用Hexo + Github Pages搭建个人独立博客](https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/)\n\n- [Hexo使用指南](http://www.jianshu.com/p/84a8384be1ae)\n\n\n","slug":"Hexo + Github Pages搭建个人博客","published":1,"date":"2017-03-19T06:10:12.000Z","updated":"2017-03-19T12:37:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0i9bg0b0000s0rr4xq9wvvl","content":"<h1 id=\"关于Hexo与Github-Pages\"><a href=\"#关于Hexo与Github-Pages\" class=\"headerlink\" title=\"关于Hexo与Github Pages\"></a>关于Hexo与Github Pages</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"external\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<p>而Github Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服 务，站点可以被免费托管在 Github 上，你可以选择使用 Github Pages 默 认提供的域名 github.io或者自定义域名来发布站点。</p>\n<p>利用Github Pages和Hexo，我们可以搭建自己的博客网站，可以参考示例: <a href=\"https://lightmen.github.io/\" target=\"_blank\" rel=\"external\">lightmen.github.io</a>。接下来我将分步骤介绍如何用GitHub Pages和Hexo搭建个人网站。</p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>安装Hexo很简单，但是在安装前，必须确保你的电脑中已安装下列两个应用程序:</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a></li>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">Git</a></li>\n</ul>\n<p>(备注：在终端中输入 npm 命令可以验证电脑中是否安装了Node.js，输入git命令可以验证是否安装了Git，如果没有安装相应的程序，属于npm或者git命令，终端会提示找不到该命令)。</p>\n<p>如果您的电脑中已经安装了上述两个程序，那么恭喜你！接下来你只需要在终端中输入如下命令就可以完成 Hexo 的安装：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p> Hexo安装完成后，接下来在指定文件夹中新建需要的文件，我们可以假设有个hexo目录，然后在该目录里面创建一个blog文件：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> hexo</div><div class=\"line\">$ mkdir blog</div><div class=\"line\">$ hexo init blog</div><div class=\"line\">$ <span class=\"built_in\">cd</span> blog</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure></p>\n<p> 新建完成后，在blog目录下面会生成如下文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure></p>\n<p>这些文件的具体释义，参考 hexo.io官网中<a href=\"https://hexo.io/zh-cn/docs/configuration.html\" target=\"_blank\" rel=\"external\">配置</a>一节, 这里不做过多解释。</p>\n<p>继续操作，在终端中输入如下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>提示: “Hexo is running at <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>. “  在浏览器中打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>, 你将会看到:<br><img src=\"http://note.youdao.com/yws/api/personal/file/WEB109a2e85adcbf21b729cc70c8df2ef85?method=download&amp;shareKey=e3cf0fdd4ce77bfbc0dcf0b559f3a529\" alt=\"landscape\"></p>\n<p>至此，Hexo的本地配置基本完成。</p>\n<h1 id=\"配置Github-Pages\"><a href=\"#配置Github-Pages\" class=\"headerlink\" title=\"配置Github Pages\"></a>配置Github Pages</h1><p>配置Github Pages，首先你得有个github账号，如果没有，请进入 <a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">GitHub网站</a>注册，登陆进去。</p>\n<p>登陆网站后，在网站右上角的”+”图标那里，点击 “<a href=\"https://github.com/new\" target=\"_blank\" rel=\"external\">New repository</a>“, 创建一个仓库。仓库名必须为你的用户名＋ github.io，比如我的github用户名为：lightmen， 那么我创建的仓库名就必须为：lightmen.github.io。 创建好后，可以试着在浏览器里面输入 <a href=\"https://yourname.github.io/\" target=\"_blank\" rel=\"external\">https://yourname.github.io/</a>, 确认是否可以正常访问(当然，刚刚创建的仓库，里面什么内容都没有，浏览器会显示空白)。</p>\n<p>另外，如果你是第一次使用github，你必须在本地配置好你的git环境，确保你可以往github上面的仓库传文件。这里，不做过多介绍，网上一堆可参考的教程。</p>\n<h1 id=\"部署到Github-Pages\"><a href=\"#部署到Github-Pages\" class=\"headerlink\" title=\"部署到Github Pages\"></a>部署到Github Pages</h1><p>这一节的内容可以参考Hexo官方文档中<a href=\"https://hexo.io/zh-cn/docs/deployment.html\" target=\"_blank\" rel=\"external\">部署部分</a>，我这里分三个步骤讲解。</p>\n<ol>\n<li><p>运行如下命令，安装<a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"external\">hexo-deployer-git</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后打开Hexo主文件夹(备注：hexo init命令设置的那个文件夹）中的_config.yml, 设置其中的deploy参数，以我的为例，设置的内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: https://github.com/lightmen/lightmen.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后在当前目录下，打开终端，输入下面命令，将网站部署到服务器上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo d</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>随后，按照提示输入github的账号和密码，上传文件。网站部署到服务区后，就可以通过 <a href=\"https://yourname.github.io/\" target=\"_blank\" rel=\"external\">https://yourname.github.io/</a> 来访问自己刚刚上传的网站。</p>\n<h1 id=\"添加新文章\"><a href=\"#添加新文章\" class=\"headerlink\" title=\"添加新文章\"></a>添加新文章</h1><p>在网站中添加文章，通过运行以下命令创建POST：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo n “your post name”</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>然后可以在浏览器查看修改的内容。</p>\n<p>打开Hexo主文件夹下的source 目录，所有的文章都会以md形式保存在_post文件夹中，只要在 _post文件夹中新建md类型的文档，就能在执行hexo g的时候被渲染。 新建的文章头需要添加一些yml信息，如下所示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: hello-world   //在此处添加你的标题。</div><div class=\"line\">date: 2017-03-18 22:15:29   //在此处输入你编辑这篇文章的时间。</div><div class=\"line\">categories: Exercise   //在此处输入这篇文章的分类。</div><div class=\"line\">toc: true  //在此处设定是否开启目录，需要主题支持。</div></pre></td></tr></table></figure></p>\n<h1 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h1><p>如果成功完成了上述的全部步骤，恭喜你，你已经搭建了一个最为简单且基础的博客。但是这个博客还非常简单， 没有个人的定制，操作也比较复杂。我们还可以进行一些设置主题、更换域名等操作，调整自己的博客，这部分内容待续。</p>\n<p>参考文档：</p>\n<ul>\n<li><p><a href=\"http://www.jianshu.com/p/f4dce0e76886\" target=\"_blank\" rel=\"external\">使用Hexo搭建个人博客</a></p>\n</li>\n<li><p><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\" target=\"_blank\" rel=\"external\">史上最详细的Hexo博客搭建图文教程</a></p>\n</li>\n<li><p><a href=\"https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/\" target=\"_blank\" rel=\"external\">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></p>\n</li>\n<li><p><a href=\"http://www.jianshu.com/p/84a8384be1ae\" target=\"_blank\" rel=\"external\">Hexo使用指南</a></p>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"关于Hexo与Github-Pages\"><a href=\"#关于Hexo与Github-Pages\" class=\"headerlink\" title=\"关于Hexo与Github Pages\"></a>关于Hexo与Github Pages</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<p>而Github Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服 务，站点可以被免费托管在 Github 上，你可以选择使用 Github Pages 默 认提供的域名 github.io或者自定义域名来发布站点。</p>\n<p>利用Github Pages和Hexo，我们可以搭建自己的博客网站，可以参考示例: <a href=\"https://lightmen.github.io/\">lightmen.github.io</a>。接下来我将分步骤介绍如何用GitHub Pages和Hexo搭建个人网站。</p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>安装Hexo很简单，但是在安装前，必须确保你的电脑中已安装下列两个应用程序:</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/\">Node.js</a></li>\n<li><a href=\"https://git-scm.com/\">Git</a></li>\n</ul>\n<p>(备注：在终端中输入 npm 命令可以验证电脑中是否安装了Node.js，输入git命令可以验证是否安装了Git，如果没有安装相应的程序，属于npm或者git命令，终端会提示找不到该命令)。</p>\n<p>如果您的电脑中已经安装了上述两个程序，那么恭喜你！接下来你只需要在终端中输入如下命令就可以完成 Hexo 的安装：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p> Hexo安装完成后，接下来在指定文件夹中新建需要的文件，我们可以假设有个hexo目录，然后在该目录里面创建一个blog文件：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> hexo</div><div class=\"line\">$ mkdir blog</div><div class=\"line\">$ hexo init blog</div><div class=\"line\">$ <span class=\"built_in\">cd</span> blog</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure></p>\n<p> 新建完成后，在blog目录下面会生成如下文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure></p>\n<p>这些文件的具体释义，参考 hexo.io官网中<a href=\"https://hexo.io/zh-cn/docs/configuration.html\">配置</a>一节, 这里不做过多解释。</p>\n<p>继续操作，在终端中输入如下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>提示: “Hexo is running at <a href=\"http://localhost:4000/\">http://localhost:4000/</a>. “  在浏览器中打开<a href=\"http://localhost:4000/\">http://localhost:4000/</a>, 你将会看到:<br><img src=\"http://note.youdao.com/yws/api/personal/file/WEB109a2e85adcbf21b729cc70c8df2ef85?method=download&amp;shareKey=e3cf0fdd4ce77bfbc0dcf0b559f3a529\" alt=\"landscape\"></p>\n<p>至此，Hexo的本地配置基本完成。</p>\n<h1 id=\"配置Github-Pages\"><a href=\"#配置Github-Pages\" class=\"headerlink\" title=\"配置Github Pages\"></a>配置Github Pages</h1><p>配置Github Pages，首先你得有个github账号，如果没有，请进入 <a href=\"https://github.com/\">GitHub网站</a>注册，登陆进去。</p>\n<p>登陆网站后，在网站右上角的”+”图标那里，点击 “<a href=\"https://github.com/new\">New repository</a>“, 创建一个仓库。仓库名必须为你的用户名＋ github.io，比如我的github用户名为：lightmen， 那么我创建的仓库名就必须为：lightmen.github.io。 创建好后，可以试着在浏览器里面输入 <a href=\"https://yourname.github.io/\">https://yourname.github.io/</a>, 确认是否可以正常访问(当然，刚刚创建的仓库，里面什么内容都没有，浏览器会显示空白)。</p>\n<p>另外，如果你是第一次使用github，你必须在本地配置好你的git环境，确保你可以往github上面的仓库传文件。这里，不做过多介绍，网上一堆可参考的教程。</p>\n<h1 id=\"部署到Github-Pages\"><a href=\"#部署到Github-Pages\" class=\"headerlink\" title=\"部署到Github Pages\"></a>部署到Github Pages</h1><p>这一节的内容可以参考Hexo官方文档中<a href=\"https://hexo.io/zh-cn/docs/deployment.html\">部署部分</a>，我这里分三个步骤讲解。</p>\n<ol>\n<li><p>运行如下命令，安装<a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后打开Hexo主文件夹(备注：hexo init命令设置的那个文件夹）中的_config.yml, 设置其中的deploy参数，以我的为例，设置的内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: https://github.com/lightmen/lightmen.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后在当前目录下，打开终端，输入下面命令，将网站部署到服务器上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo d</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>随后，按照提示输入github的账号和密码，上传文件。网站部署到服务区后，就可以通过 <a href=\"https://yourname.github.io/\">https://yourname.github.io/</a> 来访问自己刚刚上传的网站。</p>\n<h1 id=\"添加新文章\"><a href=\"#添加新文章\" class=\"headerlink\" title=\"添加新文章\"></a>添加新文章</h1><p>在网站中添加文章，通过运行以下命令创建POST：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo n “your post name”</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>然后可以在浏览器查看修改的内容。</p>\n<p>打开Hexo主文件夹下的source 目录，所有的文章都会以md形式保存在_post文件夹中，只要在 _post文件夹中新建md类型的文档，就能在执行hexo g的时候被渲染。 新建的文章头需要添加一些yml信息，如下所示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: hello-world   //在此处添加你的标题。</div><div class=\"line\">date: 2017-03-18 22:15:29   //在此处输入你编辑这篇文章的时间。</div><div class=\"line\">categories: Exercise   //在此处输入这篇文章的分类。</div><div class=\"line\">toc: true  //在此处设定是否开启目录，需要主题支持。</div></pre></td></tr></table></figure></p>\n<h1 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h1><p>如果成功完成了上述的全部步骤，恭喜你，你已经搭建了一个最为简单且基础的博客。但是这个博客还非常简单， 没有个人的定制，操作也比较复杂。我们还可以进行一些设置主题、更换域名等操作，调整自己的博客，这部分内容待续。</p>\n<p>参考文档：</p>\n<ul>\n<li><p><a href=\"http://www.jianshu.com/p/f4dce0e76886\">使用Hexo搭建个人博客</a></p>\n</li>\n<li><p><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\">史上最详细的Hexo博客搭建图文教程</a></p>\n</li>\n<li><p><a href=\"https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/\">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></p>\n</li>\n<li><p><a href=\"http://www.jianshu.com/p/84a8384be1ae\">Hexo使用指南</a></p>\n</li>\n</ul>\n"},{"title":"Hexo主题添加评论模块","toc":true,"_content":"\n在Hexo主题里面添加评论模块，可以让浏览博客的读者评论我们的文章。接下来，将介绍通过第三方评论系统多说，在Hexo主题里面添加评论模块。\n## 创建站点\n首先我们需要在[多说](http://duoshuo.com/)里面创建一个站点。具体步骤如下：\n1. 登陆多说（备注：不用注册，可以用微信扫描登陆），在首页选择“我要安装”\n2. 在“创建站点”，根据自己的情况，配置相关信息，其中，“站点地址”项要求填个人博客网站地址，比如我这里填的是 https://lightmen.github.io/， “多说域名”项比较重要，自己选个名字，例如我这里填的是 lightmen。\n\n## 配置Hexo主题_config.yml\n这一步需要配置Hexo主题里面的_config.yml文件，添加 duoshuo_shortname 字段（先搜索，如果有就不用），设置如下：\n```\nduoshuo_shortname: your-duoshuo-shortname\n```\n备注：your-duoshuo-shortname，是你在创建多说站点是，在“多说域名”项填的名字。\n比如我使用的是jacman，我需要打开 themes/jacman／_config.yml，加入如下一行：\n```\nduoshuo_shortname:    lightmen\n```\n\n至此，已经在Hexo主题里面添加完成评论模块了，接下来，可以在登陆自己的博客，检查在每篇文章后面，是否可以进行评论。如果可以，说明已经成功添加评论模块。\n\n最后，如需取消某个页面的评论，在md文件的front-matter中增加：\n```\ncomments: false\n```\n\n\n\n\n","source":"_posts/Hexo主题添加评论模块.md","raw":"---\ntitle: Hexo主题添加评论模块\ncategories: Hexo\ntags: Hexo\ntoc: true\n---\n\n在Hexo主题里面添加评论模块，可以让浏览博客的读者评论我们的文章。接下来，将介绍通过第三方评论系统多说，在Hexo主题里面添加评论模块。\n## 创建站点\n首先我们需要在[多说](http://duoshuo.com/)里面创建一个站点。具体步骤如下：\n1. 登陆多说（备注：不用注册，可以用微信扫描登陆），在首页选择“我要安装”\n2. 在“创建站点”，根据自己的情况，配置相关信息，其中，“站点地址”项要求填个人博客网站地址，比如我这里填的是 https://lightmen.github.io/， “多说域名”项比较重要，自己选个名字，例如我这里填的是 lightmen。\n\n## 配置Hexo主题_config.yml\n这一步需要配置Hexo主题里面的_config.yml文件，添加 duoshuo_shortname 字段（先搜索，如果有就不用），设置如下：\n```\nduoshuo_shortname: your-duoshuo-shortname\n```\n备注：your-duoshuo-shortname，是你在创建多说站点是，在“多说域名”项填的名字。\n比如我使用的是jacman，我需要打开 themes/jacman／_config.yml，加入如下一行：\n```\nduoshuo_shortname:    lightmen\n```\n\n至此，已经在Hexo主题里面添加完成评论模块了，接下来，可以在登陆自己的博客，检查在每篇文章后面，是否可以进行评论。如果可以，说明已经成功添加评论模块。\n\n最后，如需取消某个页面的评论，在md文件的front-matter中增加：\n```\ncomments: false\n```\n\n\n\n\n","slug":"Hexo主题添加评论模块","published":1,"date":"2017-03-19T12:47:05.000Z","updated":"2017-03-19T13:10:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0i9bg2a0001s0rro96luf6r","content":"<p>在Hexo主题里面添加评论模块，可以让浏览博客的读者评论我们的文章。接下来，将介绍通过第三方评论系统多说，在Hexo主题里面添加评论模块。</p>\n<h2 id=\"创建站点\"><a href=\"#创建站点\" class=\"headerlink\" title=\"创建站点\"></a>创建站点</h2><p>首先我们需要在<a href=\"http://duoshuo.com/\" target=\"_blank\" rel=\"external\">多说</a>里面创建一个站点。具体步骤如下：</p>\n<ol>\n<li>登陆多说（备注：不用注册，可以用微信扫描登陆），在首页选择“我要安装”</li>\n<li>在“创建站点”，根据自己的情况，配置相关信息，其中，“站点地址”项要求填个人博客网站地址，比如我这里填的是 <a href=\"https://lightmen.github.io/，\" target=\"_blank\" rel=\"external\">https://lightmen.github.io/，</a> “多说域名”项比较重要，自己选个名字，例如我这里填的是 lightmen。</li>\n</ol>\n<h2 id=\"配置Hexo主题-config-yml\"><a href=\"#配置Hexo主题-config-yml\" class=\"headerlink\" title=\"配置Hexo主题_config.yml\"></a>配置Hexo主题_config.yml</h2><p>这一步需要配置Hexo主题里面的_config.yml文件，添加 duoshuo_shortname 字段（先搜索，如果有就不用），设置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">duoshuo_shortname: your-duoshuo-shortname</div></pre></td></tr></table></figure></p>\n<p>备注：your-duoshuo-shortname，是你在创建多说站点是，在“多说域名”项填的名字。<br>比如我使用的是jacman，我需要打开 themes/jacman／_config.yml，加入如下一行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">duoshuo_shortname:    lightmen</div></pre></td></tr></table></figure></p>\n<p>至此，已经在Hexo主题里面添加完成评论模块了，接下来，可以在登陆自己的博客，检查在每篇文章后面，是否可以进行评论。如果可以，说明已经成功添加评论模块。</p>\n<p>最后，如需取消某个页面的评论，在md文件的front-matter中增加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">comments: false</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>在Hexo主题里面添加评论模块，可以让浏览博客的读者评论我们的文章。接下来，将介绍通过第三方评论系统多说，在Hexo主题里面添加评论模块。</p>\n<h2 id=\"创建站点\"><a href=\"#创建站点\" class=\"headerlink\" title=\"创建站点\"></a>创建站点</h2><p>首先我们需要在<a href=\"http://duoshuo.com/\">多说</a>里面创建一个站点。具体步骤如下：</p>\n<ol>\n<li>登陆多说（备注：不用注册，可以用微信扫描登陆），在首页选择“我要安装”</li>\n<li>在“创建站点”，根据自己的情况，配置相关信息，其中，“站点地址”项要求填个人博客网站地址，比如我这里填的是 <a href=\"https://lightmen.github.io/，\">https://lightmen.github.io/，</a> “多说域名”项比较重要，自己选个名字，例如我这里填的是 lightmen。</li>\n</ol>\n<h2 id=\"配置Hexo主题-config-yml\"><a href=\"#配置Hexo主题-config-yml\" class=\"headerlink\" title=\"配置Hexo主题_config.yml\"></a>配置Hexo主题_config.yml</h2><p>这一步需要配置Hexo主题里面的_config.yml文件，添加 duoshuo_shortname 字段（先搜索，如果有就不用），设置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">duoshuo_shortname: your-duoshuo-shortname</div></pre></td></tr></table></figure></p>\n<p>备注：your-duoshuo-shortname，是你在创建多说站点是，在“多说域名”项填的名字。<br>比如我使用的是jacman，我需要打开 themes/jacman／_config.yml，加入如下一行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">duoshuo_shortname:    lightmen</div></pre></td></tr></table></figure></p>\n<p>至此，已经在Hexo主题里面添加完成评论模块了，接下来，可以在登陆自己的博客，检查在每篇文章后面，是否可以进行评论。如果可以，说明已经成功添加评论模块。</p>\n<p>最后，如需取消某个页面的评论，在md文件的front-matter中增加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">comments: false</div></pre></td></tr></table></figure></p>\n"},{"title":"Add Binary","_content":"\n# 描述：\n[67. Add Binary](https://leetcode.com/problems/add-binary/)\n\nGiven two binary strings, return their sum (also a binary string).\n \nFor example,\na = \"11\"\nb = \"1\"\nReturn \"100\".\n\n# 题意：\n 略\n \n# 分析：\n略\n\n# 题解：\n[\\[C/C++\\]](https://github.com/lightmen/leetcode/blob/master/c/string/add-binary.c):\n```\nchar* addBinary(char* a, char* b) {\n    char *ret;\n    int la,lb,lr;\n    int i,j,k;\n    int carry = 0;\n    int value;\n\n    la = strlen(a);\n    lb = strlen(b);\n    lr = (la > lb ? la : lb) + 2;\n\n    ret = (char *)malloc(sizeof(char) * lr);\n    ret[lr-1] = 0;\n    k = lr-2;\n    i = la - 1;\n    j = lb - 1;\n    while(i >= 0 && j >= 0){\n        value = (a[i--] - '0') + (b[j--] - '0')  + carry;\n        carry = value / 2;\n        value %= 2;\n        ret[k--] = '0' + value;\n    }\n\n    if(j >= 0){\n        i = j;\n        a = b;\n    }\n\n    while(i >= 0){\n        value = (a[i--] - '0') + carry;\n        carry = value / 2;\n        value %= 2;\n        ret[k--] = '0' + value;\n    }\n\n    if(carry)\n        ret[k--] = '1';\n\n    return ret + k + 1;\n}\n```\n\n[\\[Python\\]](https://github.com/lightmen/leetcode/blob/master/python/string/add-binary.py):\n```\nclass Solution(object):\n    def addBinary(self, a, b):\n        \"\"\"\n        :type a: str\n        :type b: str\n        :rtype: str\n        \"\"\"\n        indexa = len(a) - 1\n        indexb = len(b) - 1\n        res = ''\n        carry = 0\n        while indexa >= 0 or indexb >= 0:\n            x = int(a[indexa]) if indexa >= 0 else 0\n            y = int(b[indexb]) if indexb >= 0 else 0\n            value = x + y + carry\n            carry = value // 2\n            value = value % 2\n            res = str(value) + res\n            indexa, indexb = indexa - 1, indexb - 1\n\n        if carry == 1:\n            res = '1' + res\n\n        return res\n```\n\n\n","source":"_posts/leetcode/add-binary.md","raw":"---\ntitle: Add Binary\ncategories: Leetcode\ntags:\n- Leetcode\n- C/C++\n- Python\n- Algorithm\n---\n\n# 描述：\n[67. Add Binary](https://leetcode.com/problems/add-binary/)\n\nGiven two binary strings, return their sum (also a binary string).\n \nFor example,\na = \"11\"\nb = \"1\"\nReturn \"100\".\n\n# 题意：\n 略\n \n# 分析：\n略\n\n# 题解：\n[\\[C/C++\\]](https://github.com/lightmen/leetcode/blob/master/c/string/add-binary.c):\n```\nchar* addBinary(char* a, char* b) {\n    char *ret;\n    int la,lb,lr;\n    int i,j,k;\n    int carry = 0;\n    int value;\n\n    la = strlen(a);\n    lb = strlen(b);\n    lr = (la > lb ? la : lb) + 2;\n\n    ret = (char *)malloc(sizeof(char) * lr);\n    ret[lr-1] = 0;\n    k = lr-2;\n    i = la - 1;\n    j = lb - 1;\n    while(i >= 0 && j >= 0){\n        value = (a[i--] - '0') + (b[j--] - '0')  + carry;\n        carry = value / 2;\n        value %= 2;\n        ret[k--] = '0' + value;\n    }\n\n    if(j >= 0){\n        i = j;\n        a = b;\n    }\n\n    while(i >= 0){\n        value = (a[i--] - '0') + carry;\n        carry = value / 2;\n        value %= 2;\n        ret[k--] = '0' + value;\n    }\n\n    if(carry)\n        ret[k--] = '1';\n\n    return ret + k + 1;\n}\n```\n\n[\\[Python\\]](https://github.com/lightmen/leetcode/blob/master/python/string/add-binary.py):\n```\nclass Solution(object):\n    def addBinary(self, a, b):\n        \"\"\"\n        :type a: str\n        :type b: str\n        :rtype: str\n        \"\"\"\n        indexa = len(a) - 1\n        indexb = len(b) - 1\n        res = ''\n        carry = 0\n        while indexa >= 0 or indexb >= 0:\n            x = int(a[indexa]) if indexa >= 0 else 0\n            y = int(b[indexb]) if indexb >= 0 else 0\n            value = x + y + carry\n            carry = value // 2\n            value = value % 2\n            res = str(value) + res\n            indexa, indexb = indexa - 1, indexb - 1\n\n        if carry == 1:\n            res = '1' + res\n\n        return res\n```\n\n\n","slug":"leetcode/add-binary","published":1,"date":"2017-03-19T16:06:57.000Z","updated":"2017-03-20T16:22:45.000Z","_id":"cj0i9bg5q000bs0rrrz3glkjj","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"描述：\"><a href=\"#描述：\" class=\"headerlink\" title=\"描述：\"></a>描述：</h1><p><a href=\"https://leetcode.com/problems/add-binary/\" target=\"_blank\" rel=\"external\">67. Add Binary</a></p>\n<p>Given two binary strings, return their sum (also a binary string).</p>\n<p>For example,<br>a = “11”<br>b = “1”<br>Return “100”.</p>\n<h1 id=\"题意：\"><a href=\"#题意：\" class=\"headerlink\" title=\"题意：\"></a>题意：</h1><p> 略</p>\n<h1 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h1><p>略</p>\n<h1 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h1><p><a href=\"https://github.com/lightmen/leetcode/blob/master/c/string/add-binary.c\" target=\"_blank\" rel=\"external\">[C/C++]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">char* addBinary(char* a, char* b) &#123;</div><div class=\"line\">    char *ret;</div><div class=\"line\">    int la,lb,lr;</div><div class=\"line\">    int i,j,k;</div><div class=\"line\">    int carry = 0;</div><div class=\"line\">    int value;</div><div class=\"line\"></div><div class=\"line\">    la = strlen(a);</div><div class=\"line\">    lb = strlen(b);</div><div class=\"line\">    lr = (la &gt; lb ? la : lb) + 2;</div><div class=\"line\"></div><div class=\"line\">    ret = (char *)malloc(sizeof(char) * lr);</div><div class=\"line\">    ret[lr-1] = 0;</div><div class=\"line\">    k = lr-2;</div><div class=\"line\">    i = la - 1;</div><div class=\"line\">    j = lb - 1;</div><div class=\"line\">    while(i &gt;= 0 &amp;&amp; j &gt;= 0)&#123;</div><div class=\"line\">        value = (a[i--] - &apos;0&apos;) + (b[j--] - &apos;0&apos;)  + carry;</div><div class=\"line\">        carry = value / 2;</div><div class=\"line\">        value %= 2;</div><div class=\"line\">        ret[k--] = &apos;0&apos; + value;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    if(j &gt;= 0)&#123;</div><div class=\"line\">        i = j;</div><div class=\"line\">        a = b;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    while(i &gt;= 0)&#123;</div><div class=\"line\">        value = (a[i--] - &apos;0&apos;) + carry;</div><div class=\"line\">        carry = value / 2;</div><div class=\"line\">        value %= 2;</div><div class=\"line\">        ret[k--] = &apos;0&apos; + value;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    if(carry)</div><div class=\"line\">        ret[k--] = &apos;1&apos;;</div><div class=\"line\"></div><div class=\"line\">    return ret + k + 1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/lightmen/leetcode/blob/master/python/string/add-binary.py\" target=\"_blank\" rel=\"external\">[Python]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Solution(object):</div><div class=\"line\">    def addBinary(self, a, b):</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        :type a: str</div><div class=\"line\">        :type b: str</div><div class=\"line\">        :rtype: str</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        indexa = len(a) - 1</div><div class=\"line\">        indexb = len(b) - 1</div><div class=\"line\">        res = &apos;&apos;</div><div class=\"line\">        carry = 0</div><div class=\"line\">        while indexa &gt;= 0 or indexb &gt;= 0:</div><div class=\"line\">            x = int(a[indexa]) if indexa &gt;= 0 else 0</div><div class=\"line\">            y = int(b[indexb]) if indexb &gt;= 0 else 0</div><div class=\"line\">            value = x + y + carry</div><div class=\"line\">            carry = value // 2</div><div class=\"line\">            value = value % 2</div><div class=\"line\">            res = str(value) + res</div><div class=\"line\">            indexa, indexb = indexa - 1, indexb - 1</div><div class=\"line\"></div><div class=\"line\">        if carry == 1:</div><div class=\"line\">            res = &apos;1&apos; + res</div><div class=\"line\"></div><div class=\"line\">        return res</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h1 id=\"描述：\"><a href=\"#描述：\" class=\"headerlink\" title=\"描述：\"></a>描述：</h1><p><a href=\"https://leetcode.com/problems/add-binary/\">67. Add Binary</a></p>\n<p>Given two binary strings, return their sum (also a binary string).</p>\n<p>For example,<br>a = “11”<br>b = “1”<br>Return “100”.</p>\n<h1 id=\"题意：\"><a href=\"#题意：\" class=\"headerlink\" title=\"题意：\"></a>题意：</h1><p> 略</p>\n<h1 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h1><p>略</p>\n<h1 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h1><p><a href=\"https://github.com/lightmen/leetcode/blob/master/c/string/add-binary.c\">[C/C++]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">char* addBinary(char* a, char* b) &#123;</div><div class=\"line\">    char *ret;</div><div class=\"line\">    int la,lb,lr;</div><div class=\"line\">    int i,j,k;</div><div class=\"line\">    int carry = 0;</div><div class=\"line\">    int value;</div><div class=\"line\"></div><div class=\"line\">    la = strlen(a);</div><div class=\"line\">    lb = strlen(b);</div><div class=\"line\">    lr = (la &gt; lb ? la : lb) + 2;</div><div class=\"line\"></div><div class=\"line\">    ret = (char *)malloc(sizeof(char) * lr);</div><div class=\"line\">    ret[lr-1] = 0;</div><div class=\"line\">    k = lr-2;</div><div class=\"line\">    i = la - 1;</div><div class=\"line\">    j = lb - 1;</div><div class=\"line\">    while(i &gt;= 0 &amp;&amp; j &gt;= 0)&#123;</div><div class=\"line\">        value = (a[i--] - &apos;0&apos;) + (b[j--] - &apos;0&apos;)  + carry;</div><div class=\"line\">        carry = value / 2;</div><div class=\"line\">        value %= 2;</div><div class=\"line\">        ret[k--] = &apos;0&apos; + value;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    if(j &gt;= 0)&#123;</div><div class=\"line\">        i = j;</div><div class=\"line\">        a = b;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    while(i &gt;= 0)&#123;</div><div class=\"line\">        value = (a[i--] - &apos;0&apos;) + carry;</div><div class=\"line\">        carry = value / 2;</div><div class=\"line\">        value %= 2;</div><div class=\"line\">        ret[k--] = &apos;0&apos; + value;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    if(carry)</div><div class=\"line\">        ret[k--] = &apos;1&apos;;</div><div class=\"line\"></div><div class=\"line\">    return ret + k + 1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/lightmen/leetcode/blob/master/python/string/add-binary.py\">[Python]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Solution(object):</div><div class=\"line\">    def addBinary(self, a, b):</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        :type a: str</div><div class=\"line\">        :type b: str</div><div class=\"line\">        :rtype: str</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        indexa = len(a) - 1</div><div class=\"line\">        indexb = len(b) - 1</div><div class=\"line\">        res = &apos;&apos;</div><div class=\"line\">        carry = 0</div><div class=\"line\">        while indexa &gt;= 0 or indexb &gt;= 0:</div><div class=\"line\">            x = int(a[indexa]) if indexa &gt;= 0 else 0</div><div class=\"line\">            y = int(b[indexb]) if indexb &gt;= 0 else 0</div><div class=\"line\">            value = x + y + carry</div><div class=\"line\">            carry = value // 2</div><div class=\"line\">            value = value % 2</div><div class=\"line\">            res = str(value) + res</div><div class=\"line\">            indexa, indexb = indexa - 1, indexb - 1</div><div class=\"line\"></div><div class=\"line\">        if carry == 1:</div><div class=\"line\">            res = &apos;1&apos; + res</div><div class=\"line\"></div><div class=\"line\">        return res</div></pre></td></tr></table></figure></p>\n"},{"title":"Assign Cookies","_content":"\n# 描述：\n[455. Assign Cookies](https://leetcode.com/problems/assign-cookies/)\n\nAssume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj >= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\n\n**Note:**\nYou may assume the greed factor is always positive. \nYou cannot assign more than one cookie to one child. \n\n**Example 1:** \n```\nInput: [1,2,3], [1,1] \n\nOutput: 1 \n\nExplanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \n\nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content. \n\nYou need to output 1. \n```\n\n**Example 2:**\n```\nInput: [1,2], [1,2,3] \n\nOutput: 2 \n\nExplanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \n\nYou have 3 cookies and their sizes are big enough to gratify all of the children, \n\nYou need to output 2. \n```\n\n# 题意：\n假设你是一位很赞的家长想要给孩子一些饼干。但是，你只能至多给每个孩子一个饼干。孩子i的贪婪因子为gi，意思是他所满意的饼干的最小尺寸；每一个饼干j的尺寸为sj。如果sj >= gi，我们就可以把饼干j分给孩子i，然后孩子i会很满意。你的目标是最大化分到饼干的孩子的个数。\n\n**注意：**\n\n可以假设贪婪因子都是正数。\n不可以为一个孩子分配多个饼干。\n\n# 分析：\n贪心算法\n\n# 题解：\n[\\[C/C++\\]](https://github.com/lightmen/leetcode/blob/master/c/greedy/assign-cookies.c):\n```\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n\nint findContentChildren(int* g, int gSize, int* s, int sSize) {\n    int i = gSize - 1;\n    int j = sSize - 1;\n    int ret = 0;\n\n    qsort(g, gSize, sizeof(int), cmp);\n    qsort(s, sSize, sizeof(int), cmp);\n\n    while(i >= 0 && j >= 0){\n        if(s[j] >= g[i]){\n            j--;\n            ret++;\n        }\n        i--;\n    }\n\n    return ret;\n}\n```\n\n[\\[Python\\]](https://github.com/lightmen/leetcode/blob/master/python/greedy/assign-cookies.py):\n```\nclass Solution(object):\n    def findContentChildren(self, g, s):\n        \"\"\"\n        :type g: List[int]\n        :type s: List[int]\n        :rtype: int\n        \"\"\"\n        i, j = len(g) - 1, len(s) - 1\n        g, s = sorted(g), sorted(s)\n        ret = 0\n\n        while min(i, j) >= 0:\n            if s[j] >= g[i]:\n                ret += 1\n                j -= 1\n\n            i -= 1\n\n        return ret\n```\n\n","source":"_posts/leetcode/assign-cookies.md","raw":"---\ntitle: Assign Cookies\ncategories: Leetcode\ntags:\n- Leetcode\n- C/C++\n- Python\n- Algorithm\n- 贪心算法\n---\n\n# 描述：\n[455. Assign Cookies](https://leetcode.com/problems/assign-cookies/)\n\nAssume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj >= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\n\n**Note:**\nYou may assume the greed factor is always positive. \nYou cannot assign more than one cookie to one child. \n\n**Example 1:** \n```\nInput: [1,2,3], [1,1] \n\nOutput: 1 \n\nExplanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \n\nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content. \n\nYou need to output 1. \n```\n\n**Example 2:**\n```\nInput: [1,2], [1,2,3] \n\nOutput: 2 \n\nExplanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \n\nYou have 3 cookies and their sizes are big enough to gratify all of the children, \n\nYou need to output 2. \n```\n\n# 题意：\n假设你是一位很赞的家长想要给孩子一些饼干。但是，你只能至多给每个孩子一个饼干。孩子i的贪婪因子为gi，意思是他所满意的饼干的最小尺寸；每一个饼干j的尺寸为sj。如果sj >= gi，我们就可以把饼干j分给孩子i，然后孩子i会很满意。你的目标是最大化分到饼干的孩子的个数。\n\n**注意：**\n\n可以假设贪婪因子都是正数。\n不可以为一个孩子分配多个饼干。\n\n# 分析：\n贪心算法\n\n# 题解：\n[\\[C/C++\\]](https://github.com/lightmen/leetcode/blob/master/c/greedy/assign-cookies.c):\n```\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n\nint findContentChildren(int* g, int gSize, int* s, int sSize) {\n    int i = gSize - 1;\n    int j = sSize - 1;\n    int ret = 0;\n\n    qsort(g, gSize, sizeof(int), cmp);\n    qsort(s, sSize, sizeof(int), cmp);\n\n    while(i >= 0 && j >= 0){\n        if(s[j] >= g[i]){\n            j--;\n            ret++;\n        }\n        i--;\n    }\n\n    return ret;\n}\n```\n\n[\\[Python\\]](https://github.com/lightmen/leetcode/blob/master/python/greedy/assign-cookies.py):\n```\nclass Solution(object):\n    def findContentChildren(self, g, s):\n        \"\"\"\n        :type g: List[int]\n        :type s: List[int]\n        :rtype: int\n        \"\"\"\n        i, j = len(g) - 1, len(s) - 1\n        g, s = sorted(g), sorted(s)\n        ret = 0\n\n        while min(i, j) >= 0:\n            if s[j] >= g[i]:\n                ret += 1\n                j -= 1\n\n            i -= 1\n\n        return ret\n```\n\n","slug":"leetcode/assign-cookies","published":1,"date":"2017-03-20T16:21:17.000Z","updated":"2017-03-20T16:47:34.000Z","_id":"cj0ibtt150000xorr1y3o2zvd","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"描述：\"><a href=\"#描述：\" class=\"headerlink\" title=\"描述：\"></a>描述：</h1><p><a href=\"https://leetcode.com/problems/assign-cookies/\" target=\"_blank\" rel=\"external\">455. Assign Cookies</a></p>\n<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj &gt;= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>\n<p><strong>Note:</strong><br>You may assume the greed factor is always positive.<br>You cannot assign more than one cookie to one child. </p>\n<p><strong>Example 1:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Input: [1,2,3], [1,1] </div><div class=\"line\"></div><div class=\"line\">Output: 1 </div><div class=\"line\"></div><div class=\"line\">Explanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. </div><div class=\"line\"></div><div class=\"line\">And even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content. </div><div class=\"line\"></div><div class=\"line\">You need to output 1.</div></pre></td></tr></table></figure></p>\n<p><strong>Example 2:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Input: [1,2], [1,2,3] </div><div class=\"line\"></div><div class=\"line\">Output: 2 </div><div class=\"line\"></div><div class=\"line\">Explanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. </div><div class=\"line\"></div><div class=\"line\">You have 3 cookies and their sizes are big enough to gratify all of the children, </div><div class=\"line\"></div><div class=\"line\">You need to output 2.</div></pre></td></tr></table></figure></p>\n<h1 id=\"题意：\"><a href=\"#题意：\" class=\"headerlink\" title=\"题意：\"></a>题意：</h1><p>假设你是一位很赞的家长想要给孩子一些饼干。但是，你只能至多给每个孩子一个饼干。孩子i的贪婪因子为gi，意思是他所满意的饼干的最小尺寸；每一个饼干j的尺寸为sj。如果sj &gt;= gi，我们就可以把饼干j分给孩子i，然后孩子i会很满意。你的目标是最大化分到饼干的孩子的个数。</p>\n<p><strong>注意：</strong></p>\n<p>可以假设贪婪因子都是正数。<br>不可以为一个孩子分配多个饼干。</p>\n<h1 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h1><p>贪心算法</p>\n<h1 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h1><p><a href=\"https://github.com/lightmen/leetcode/blob/master/c/greedy/assign-cookies.c\" target=\"_blank\" rel=\"external\">[C/C++]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">int cmp(const void *a, const void *b)</div><div class=\"line\">&#123;</div><div class=\"line\">    return *(int *)a - *(int *)b;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int findContentChildren(int* g, int gSize, int* s, int sSize) &#123;</div><div class=\"line\">    int i = gSize - 1;</div><div class=\"line\">    int j = sSize - 1;</div><div class=\"line\">    int ret = 0;</div><div class=\"line\"></div><div class=\"line\">    qsort(g, gSize, sizeof(int), cmp);</div><div class=\"line\">    qsort(s, sSize, sizeof(int), cmp);</div><div class=\"line\"></div><div class=\"line\">    while(i &gt;= 0 &amp;&amp; j &gt;= 0)&#123;</div><div class=\"line\">        if(s[j] &gt;= g[i])&#123;</div><div class=\"line\">            j--;</div><div class=\"line\">            ret++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        i--;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/lightmen/leetcode/blob/master/python/greedy/assign-cookies.py\" target=\"_blank\" rel=\"external\">[Python]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Solution(object):</div><div class=\"line\">    def findContentChildren(self, g, s):</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        :type g: List[int]</div><div class=\"line\">        :type s: List[int]</div><div class=\"line\">        :rtype: int</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        i, j = len(g) - 1, len(s) - 1</div><div class=\"line\">        g, s = sorted(g), sorted(s)</div><div class=\"line\">        ret = 0</div><div class=\"line\"></div><div class=\"line\">        while min(i, j) &gt;= 0:</div><div class=\"line\">            if s[j] &gt;= g[i]:</div><div class=\"line\">                ret += 1</div><div class=\"line\">                j -= 1</div><div class=\"line\"></div><div class=\"line\">            i -= 1</div><div class=\"line\"></div><div class=\"line\">        return ret</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h1 id=\"描述：\"><a href=\"#描述：\" class=\"headerlink\" title=\"描述：\"></a>描述：</h1><p><a href=\"https://leetcode.com/problems/assign-cookies/\">455. Assign Cookies</a></p>\n<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj &gt;= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>\n<p><strong>Note:</strong><br>You may assume the greed factor is always positive.<br>You cannot assign more than one cookie to one child. </p>\n<p><strong>Example 1:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Input: [1,2,3], [1,1] </div><div class=\"line\"></div><div class=\"line\">Output: 1 </div><div class=\"line\"></div><div class=\"line\">Explanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. </div><div class=\"line\"></div><div class=\"line\">And even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content. </div><div class=\"line\"></div><div class=\"line\">You need to output 1.</div></pre></td></tr></table></figure></p>\n<p><strong>Example 2:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Input: [1,2], [1,2,3] </div><div class=\"line\"></div><div class=\"line\">Output: 2 </div><div class=\"line\"></div><div class=\"line\">Explanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. </div><div class=\"line\"></div><div class=\"line\">You have 3 cookies and their sizes are big enough to gratify all of the children, </div><div class=\"line\"></div><div class=\"line\">You need to output 2.</div></pre></td></tr></table></figure></p>\n<h1 id=\"题意：\"><a href=\"#题意：\" class=\"headerlink\" title=\"题意：\"></a>题意：</h1><p>假设你是一位很赞的家长想要给孩子一些饼干。但是，你只能至多给每个孩子一个饼干。孩子i的贪婪因子为gi，意思是他所满意的饼干的最小尺寸；每一个饼干j的尺寸为sj。如果sj &gt;= gi，我们就可以把饼干j分给孩子i，然后孩子i会很满意。你的目标是最大化分到饼干的孩子的个数。</p>\n<p><strong>注意：</strong></p>\n<p>可以假设贪婪因子都是正数。<br>不可以为一个孩子分配多个饼干。</p>\n<h1 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h1><p>贪心算法</p>\n<h1 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h1><p><a href=\"https://github.com/lightmen/leetcode/blob/master/c/greedy/assign-cookies.c\">[C/C++]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">int cmp(const void *a, const void *b)</div><div class=\"line\">&#123;</div><div class=\"line\">    return *(int *)a - *(int *)b;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int findContentChildren(int* g, int gSize, int* s, int sSize) &#123;</div><div class=\"line\">    int i = gSize - 1;</div><div class=\"line\">    int j = sSize - 1;</div><div class=\"line\">    int ret = 0;</div><div class=\"line\"></div><div class=\"line\">    qsort(g, gSize, sizeof(int), cmp);</div><div class=\"line\">    qsort(s, sSize, sizeof(int), cmp);</div><div class=\"line\"></div><div class=\"line\">    while(i &gt;= 0 &amp;&amp; j &gt;= 0)&#123;</div><div class=\"line\">        if(s[j] &gt;= g[i])&#123;</div><div class=\"line\">            j--;</div><div class=\"line\">            ret++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        i--;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/lightmen/leetcode/blob/master/python/greedy/assign-cookies.py\">[Python]</a>:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">class Solution(object):</div><div class=\"line\">    def findContentChildren(self, g, s):</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        :type g: List[int]</div><div class=\"line\">        :type s: List[int]</div><div class=\"line\">        :rtype: int</div><div class=\"line\">        &quot;&quot;&quot;</div><div class=\"line\">        i, j = len(g) - 1, len(s) - 1</div><div class=\"line\">        g, s = sorted(g), sorted(s)</div><div class=\"line\">        ret = 0</div><div class=\"line\"></div><div class=\"line\">        while min(i, j) &gt;= 0:</div><div class=\"line\">            if s[j] &gt;= g[i]:</div><div class=\"line\">                ret += 1</div><div class=\"line\">                j -= 1</div><div class=\"line\"></div><div class=\"line\">            i -= 1</div><div class=\"line\"></div><div class=\"line\">        return ret</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj0i9bg0b0000s0rr4xq9wvvl","category_id":"cj0i9bg2d0002s0rr549so8uh","_id":"cj0i9bg2m0007s0rragas1qi7"},{"post_id":"cj0i9bg2a0001s0rro96luf6r","category_id":"cj0i9bg2d0002s0rr549so8uh","_id":"cj0i9bg2o0009s0rrbqp11jwh"},{"post_id":"cj0i9bg5q000bs0rrrz3glkjj","category_id":"cj0i9bg5u000cs0rry3usu0wh","_id":"cj0i9bg5y000fs0rr9p4qn3ie"},{"post_id":"cj0ibtt150000xorr1y3o2zvd","category_id":"cj0i9bg5u000cs0rry3usu0wh","_id":"cj0ibtt1h0002xorrjqgbyea0"}],"PostTag":[{"post_id":"cj0i9bg0b0000s0rr4xq9wvvl","tag_id":"cj0i9bg2i0003s0rr8yu7efhm","_id":"cj0i9bg2m0006s0rr307c77oz"},{"post_id":"cj0i9bg2a0001s0rro96luf6r","tag_id":"cj0i9bg2i0003s0rr8yu7efhm","_id":"cj0i9bg2o0008s0rrwx03rrtz"},{"post_id":"cj0i9bg5q000bs0rrrz3glkjj","tag_id":"cj0i9bg5v000ds0rr9p6oq930","_id":"cj0i9bg61000is0rr98kj4f8n"},{"post_id":"cj0i9bg5q000bs0rrrz3glkjj","tag_id":"cj0i9bg5v000es0rrq3wq00gq","_id":"cj0i9bg61000js0rrjjqtz1vk"},{"post_id":"cj0i9bg5q000bs0rrrz3glkjj","tag_id":"cj0i9bg5z000gs0rrv66owjn6","_id":"cj0i9bg61000ks0rrus4h4rdv"},{"post_id":"cj0i9bg5q000bs0rrrz3glkjj","tag_id":"cj0ibtt1b0001xorr7j7j0xsn","_id":"cj0ibtt1j0004xorr94xfyk6z"},{"post_id":"cj0ibtt150000xorr1y3o2zvd","tag_id":"cj0i9bg5v000ds0rr9p6oq930","_id":"cj0ibtt1k0006xorryoccqiq7"},{"post_id":"cj0ibtt150000xorr1y3o2zvd","tag_id":"cj0i9bg5v000es0rrq3wq00gq","_id":"cj0ibtt280007xorret8adjxi"},{"post_id":"cj0ibtt150000xorr1y3o2zvd","tag_id":"cj0i9bg5z000gs0rrv66owjn6","_id":"cj0ibtt290008xorrh9tkm98f"},{"post_id":"cj0ibtt150000xorr1y3o2zvd","tag_id":"cj0ibtt1b0001xorr7j7j0xsn","_id":"cj0ibtt290009xorryrs48emm"},{"post_id":"cj0ibtt150000xorr1y3o2zvd","tag_id":"cj0ibtt1j0005xorrfu1s13te","_id":"cj0ibtt29000axorr5yi7o7oa"}],"Tag":[{"name":"Hexo","_id":"cj0i9bg2i0003s0rr8yu7efhm"},{"name":"Leetcode","_id":"cj0i9bg5v000ds0rr9p6oq930"},{"name":"C/C++","_id":"cj0i9bg5v000es0rrq3wq00gq"},{"name":"Python","_id":"cj0i9bg5z000gs0rrv66owjn6"},{"name":"算法","_id":"cj0i9bg60000hs0rrrpb6osnv"},{"name":"Algorithm","_id":"cj0ibtt1b0001xorr7j7j0xsn"},{"name":"贪心算法","_id":"cj0ibtt1j0005xorrfu1s13te"}]}}